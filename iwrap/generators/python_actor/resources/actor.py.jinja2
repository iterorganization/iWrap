import os

from .common.base_classes.base_actor import ActorBaseClass
from .common.definitions import Argument
from .common.code_parameters import CodeParameters

# {{ " PROVENANCE INFO ".center(80, '=') }}
ACTOR_DESCRIPTION = {{actor_settings | pprint | wordwrap(width=80, wrapstring='\n\t\t')}}

CODE_DESCRIPTION = {{code_description | pprint | indent(width=8)}}
# {{ "".center(80, '=') }}


class {{actor_settings.actor_name}}(ActorBaseClass):
    """{{code_description.documentation | wordwrap(width=80, wrapstring='\n\t\t') }}
    """

    NATIVE_LANGUAGE = '{{code_description.programming_language | lower}}'
    IS_MPI = {% if not code_description.language_specific.mpi.mpi_compiler_cmd or code_description.language_specific.mpi.mpi_compiler_cmd == 'None' %} False {% else %} True {% endif %}

    # Provenance info
    actor_description = ACTOR_DESCRIPTION
    code_description = CODE_DESCRIPTION
    # {{ "".center(80, '=') }}

    __instance_index = 0

    @property
    def unique_id(self):
        class_name = self.__class__.__name__
        idx = self.__instance_index
        pid = os.getpid()
        uid = f'{class_name}_{idx}#{pid}'
        return uid

    def __new__(cls):
        new_object =  object.__new__(cls)
        cls.__instance_index +=  1
        return new_object

    def __init__(self):
        actor_dir = os.path.dirname( os.path.realpath( __file__ ) )
        super().__init__(actor_dir, self.NATIVE_LANGUAGE, self.IS_MPI)

        # Auto-generated list of arguments meta-data
    {% for argument in code_description.arguments %}
        argument = Argument(name='{{ argument.name }}', type='{{argument.type}}', intent='{{argument.intent}}')
        self.arguments.append(argument)
    {% endfor %}

    # Static code parameters
    {% if code_description.code_parameters.parameters and code_description.code_parameters.schema %}
        default_parameters_file = '{{code_description.code_parameters.parameters.split('/')[-1]}}'
        schema_file = '{{code_description.code_parameters.schema.split('/')[-1]}}'
    {% else %}
        default_parameters_file = ''
        schema_file = ''
    {% endif %}
        self.code_parameters = CodeParameters(default_parameters_file, schema_file)







